{"version":3,"sources":["components/Context/PokemonContext.js","components/Header/Navbar.jsx","components/Main/SearchBar.jsx","components/Main/Pokedex/ArrowsSvg.js","components/Main/Pokedex/Pagination.jsx","components/Main/Pokedex/Pokemon.jsx","components/Loading/Loading.jsx","components/Main/Pokedex/Pokedex.jsx","components/Main/Pokedex/PokemonsFavorits.jsx","App.js","index.js"],"names":["PokemonContext","React","createContext","PokemonProvider","props","useState","pokemones","setPokemones","notFound","setNotFound","isSearching","setIsSearching","page","setPage","totalPage","setTotalPage","favoritsPokemons","setFavoritsPokemons","isViewFavorits","setIsViewFavorits","typePokemonColor","pokemon","types","map","type","name","ObtenerPokemones","a","fetch","dataPokemones","json","data","Math","ceil","count","allPokemones","results","url","urlPokemones","pokemonsData","Promise","all","favorits","namePokemon","some","favorit","filter","heart","Pokename","p","value","useMemo","Provider","usePokemon","context","useContext","console","log","Navbar","className","style","height","src","alt","onClick","cursor","length","SearchBar","searchPokemon","setPokemon","search","htmlFor","outline","placeholder","onChange","e","target","toLowerCase","disabled","LeftArrow","xmlns","viewBox","width","d","fill","stroke","stroke-linecap","stroke-linejoin","RightArrow","Pagination","max","min","Pokemon","key","sprites","front_default","backgroundColor","Loading","class","role","Pokedex","PokemonsFavorits","Pokemons","App","useEffect","response","ok","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b56ab43.chunk.js","sourcesContent":["import React, { useState, useMemo } from 'react';\r\n\r\nconst PokemonContext = React.createContext();\r\n\r\nexport function PokemonProvider(props) {\r\n    const [pokemones, setPokemones] = useState([]);\r\n    const [notFound, setNotFound] = useState(false);\r\n    const [isSearching, setIsSearching] = useState(false);\r\n    const [page, setPage] = useState(0);\r\n    const [totalPage, setTotalPage] = useState(0);\r\n    const [favoritsPokemons, setFavoritsPokemons] = useState([]);\r\n    const [isViewFavorits, setIsViewFavorits] = useState(false);\r\n\r\n    const typePokemonColor = (pokemon) => {\r\n        const color = pokemon.types.map((type) => {\r\n            switch (type.type.name) {\r\n                case \"grass\":\r\n                    return \"bg-success\";\r\n                case \"fire\":\r\n                    return \"bg-danger\";\r\n                case \"water\":\r\n                    return \"bg-primary\";\r\n                case \"electric\":\r\n                    return \"bg-primary\";\r\n                case \"poison\":\r\n                    return \"bg-warning\";\r\n                case \"flying\":\r\n                    return \"bg-info\";\r\n                case \"bug\":\r\n                    return \"bg-secondary\";\r\n                case \"normal\":\r\n                    return \"#00cdaa\";\r\n                case \"ground\":\r\n                    return \"#ab5600\";\r\n                case \"fairy\":\r\n                    return \"#cdcdcd\";\r\n                case \"fighting\":\r\n                    return \"#cd0000\";\r\n                case \"psychic\":\r\n                    return \"#abff12\";\r\n                case \"rock\":\r\n                    return \"#999999\";\r\n                case \"steel\":\r\n                    return \"#cfcfcf\";\r\n                case \"ice\":\r\n                    return \"#00cdef\";\r\n                case \"ghost\":\r\n                    return \"#7d56cd\";\r\n                case \"dragon\":\r\n                    return \"#ff6700\";\r\n                case \"dark\":\r\n                    return \"#120000\";\r\n                default:\r\n                    return null;\r\n            }\r\n        });\r\n        return color;\r\n    };\r\n\r\n    const ObtenerPokemones = async () => {\r\n        setNotFound(false);\r\n        setIsSearching(true)\r\n        const dataPokemones = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=18&offset=${18 * page}`);\r\n        const data = await dataPokemones.json();\r\n        setTotalPage(Math.ceil(data.count / 18))\r\n\r\n        const allPokemones = data?.results.map(async (pokemon) => {\r\n            const urlPokemones = await fetch(pokemon.url);\r\n            const pokemonsData = await urlPokemones.json();\r\n            return pokemonsData;\r\n        })\r\n        const results = await Promise.all(allPokemones);\r\n        setPokemones(results);\r\n        setIsSearching(false);\r\n\r\n    };\r\n\r\n    const favorits = (namePokemon) => {\r\n        const isFavorit = favoritsPokemons.some(\r\n            (pokemon) => pokemon.name === namePokemon\r\n        );\r\n        if (!isFavorit) {\r\n            const favorit = pokemones.filter(\r\n                (pokemon) => pokemon.name === namePokemon\r\n            );\r\n            setFavoritsPokemons([...favoritsPokemons, ...favorit]);\r\n        } else {\r\n            const favorit = favoritsPokemons.filter(\r\n                (pokemon) => pokemon.name !== namePokemon\r\n            );\r\n            setFavoritsPokemons(favorit);\r\n        }\r\n    };\r\n\r\n    const redHeart = \"❤️\";\r\n    const whiteHeart = \"♡\";\r\n\r\n\r\n    const heart = (Pokename) => {\r\n        return (\r\n            favoritsPokemons.some((p) => p.name === Pokename)\r\n                ? redHeart\r\n                : whiteHeart\r\n        )\r\n    };\r\n\r\n\r\n    const value = useMemo(() => {\r\n        return ({\r\n            pokemones,\r\n            setPokemones,\r\n            ObtenerPokemones,\r\n            notFound,\r\n            setNotFound,\r\n            isSearching,\r\n            setIsSearching,\r\n            page,\r\n            setPage,\r\n            totalPage,\r\n            setTotalPage,\r\n            favoritsPokemons,\r\n            setFavoritsPokemons,\r\n            isViewFavorits,\r\n            setIsViewFavorits,\r\n            typePokemonColor,\r\n            favorits,\r\n            heart\r\n        })\r\n    }, [page, totalPage, isSearching, notFound, favoritsPokemons, isViewFavorits, favorits, heart, pokemones]);\r\n\r\n\r\n\r\n    return (\r\n        <PokemonContext.Provider value={value} {...props}\r\n        />\r\n    )\r\n};\r\n\r\nexport function usePokemon() {\r\n    const context = React.useContext(PokemonContext);\r\n    if (!context) {\r\n        console.log('Erroooor')\r\n    }\r\n    return context;\r\n}","import React from \"react\";\r\nimport { usePokemon } from \"../Context/PokemonContext\";\r\n\r\nconst Navbar = () => {\r\n  const { favoritsPokemons, setIsViewFavorits, ObtenerPokemones } = usePokemon();\r\n\r\n  let imgUrl =\r\n    \"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\";\r\n\r\n  const viewFavorits = () => {\r\n    setIsViewFavorits(true);\r\n    ObtenerPokemones()\r\n  };\r\n\r\n  return (\r\n    <nav className=\"h-25 pt-2\">\r\n      <section className=\"h-25 d-flex bg-primary justify-content-around\">\r\n        <div></div>\r\n        <div className=\"\" style={{ height: \"50px\" }}>\r\n          <img className=\"h-100\" src={imgUrl} alt=\"\" />\r\n        </div>\r\n        <div\r\n          className=\"align-self-center\"\r\n          onClick={viewFavorits}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          &#10084;&#65039; {favoritsPokemons.length}\r\n        </div>\r\n      </section>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useState } from \"react\";\r\nimport { usePokemon } from \"../Context/PokemonContext\";\r\n\r\nconst SearchBar = ({ searchPokemon }) => {\r\n  const [pokemon, setPokemon] = useState();\r\n\r\n  const { setNotFound } = usePokemon();\r\n\r\n  const inputPokemons = (e) => {\r\n    if (e.target.value.length === 0) {\r\n      searchPokemon(null);\r\n      setPokemon();\r\n    } else {\r\n      setPokemon(e.target.value.toLowerCase());\r\n    }\r\n  };\r\n\r\n  const search = () => {\r\n    setNotFound(false);\r\n    searchPokemon(pokemon);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container justify-content-center mt-2\">\r\n      <section className=\"row d-flex\">\r\n        <div className=\"col-md-7 offset-md-2 col-sm-12\">\r\n          <label\r\n            htmlFor=\"searchBar\"\r\n            className=\"gb-dark d-flex align-content-end border-0 mb-sm-2\"\r\n            style={{ height: \"2.5rem\" }}\r\n          >\r\n            <input\r\n              className=\"shadow border border-light rounded-pill p-2 w-100 \"\r\n              style={{ outline: \"none\" }}\r\n              type=\"text\"\r\n              placeholder=\"Buscar pokemones\"\r\n              onChange={inputPokemons}\r\n            />\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"col-md-2 col-sm-12 d-flex justify-content-center\">\r\n          <section style={{ height: \"2.5rem\" }}>\r\n            {pokemon ? (\r\n              <button\r\n                className=\"btn btn-dark rounded-circle h-100\"\r\n                onClick={search}\r\n              >\r\n                Buscar\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"btn btn-dark rounded-circle h-100\"\r\n                onClick={search}\r\n                disabled\r\n              >\r\n                Buscar\r\n              </button>\r\n            )}\r\n          </section>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nexport const LeftArrow = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 21 21\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    >\r\n      <path\r\n        d=\"M11.5 14.5l-4-4 4-4\"\r\n        fill=\"none\"\r\n        stroke=\"#FFF\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const RightArrow = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      viewBox=\"0 0 21 21\"\r\n      width=\"28\"\r\n      height=\"28\"\r\n    >\r\n      <path\r\n        d=\"M9.5 14.5l4-4-4-4\"\r\n        fill=\"none\"\r\n        stroke=\"#FFF\"\r\n        stroke-linecap=\"round\"\r\n        stroke-linejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { LeftArrow, RightArrow } from \"./ArrowsSvg\";\r\nimport { usePokemon } from \"../../Context/PokemonContext\";\r\n\r\nconst Pagination = () => {\r\n  const { page, setPage, totalPage } = usePokemon();\r\n\r\n  const nextPage = () => {\r\n    setPage(Math.min(page + 1, totalPage - 1));\r\n  };\r\n\r\n  const lastPage = () => {\r\n    setPage(Math.max(page - 1, 0));\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-end px-3 py-3\">\r\n      <button className=\"btn btn-dark rounded-circle\" onClick={lastPage}>\r\n        <div className=\"icon\">\r\n          <LeftArrow />\r\n        </div>\r\n      </button>\r\n      <div className=\"align-self-center mx-2\">\r\n        {page + 1} de {totalPage}\r\n      </div>\r\n      <button className=\"btn btn-dark rounded-circle\" onClick={nextPage}>\r\n        <div className=\"icon\">\r\n          <RightArrow />\r\n        </div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { Fragment } from \"react\";\r\nimport { usePokemon } from \"../../Context/PokemonContext\";\r\n\r\nconst Pokemon = ({ pokemon, key }) => {\r\n  const { typePokemonColor, favorits, heart } = usePokemon();\r\n\r\n  /*\r\n    const favorits = (namePokemon) => {\r\n        const favorit = [...favoritsPokemons]\r\n        const favoritIndex = favoritsPokemons.indexOf(namePokemon);\r\n        if (favoritIndex >= 0) {\r\n            favorit.splice(favoritIndex, 1);\r\n        } else {\r\n            favorit.push(namePokemon);\r\n        };\r\n        setFavoritsPokemons(favorit);\r\n    };\r\n*/\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"img-container\">\r\n        <img\r\n          src={pokemon.sprites.front_default}\r\n          alt={pokemon.name}\r\n          className=\"img-fluid\"\r\n        />\r\n      </div>\r\n      <section className=\"w-100\">\r\n        <div className=\"text-start mt-2\">\r\n          <h5>{pokemon.name}</h5>\r\n        </div>\r\n        <div className=\"d-flex w-100 justify-content-around\">\r\n          <div className=\"mx-1 d-flex w-50\">\r\n            <p\r\n              className={`${\r\n                typePokemonColor(pokemon)[0]\r\n              } px-1 py-1 w-100 rounded-pill text-center`}\r\n              style={{ backgroundColor: typePokemonColor(pokemon)[0] }}\r\n            >\r\n              {pokemon.types[0].type.name}\r\n            </p>\r\n          </div>\r\n          <div className=\"mx-1 d-flex w-50\">\r\n            <p\r\n              className={\r\n                pokemon.types[1]?.type.name\r\n                  ? `${\r\n                      typePokemonColor(pokemon)[1]\r\n                    } px-1 py-1 w-100 rounded-pill text-center`\r\n                  : \"my-auto bg-secondary rounded-pill text-center\"\r\n              }\r\n              style={{ backgroundColor: typePokemonColor(pokemon)[1] }}\r\n            >\r\n              {pokemon.types[1]?.type.name}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"btn btn-outline\"\r\n              onClick={() => favorits(pokemon.name)}\r\n            >\r\n              <div>{heart(pokemon.name)}</div>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import React from \"reactstrap\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div\r\n      style={{ height: \"100vh\" }}\r\n      className=\"bg-primary d-flex justify-content-center\"\r\n    >\r\n      <section className=\"align-self-center\">\r\n        <div class=\"spinner-grow\" role=\"status\">\r\n          <span class=\"sr-only\"></span>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport Pagination from \"./Pagination\";\r\nimport Pokemon from \"./Pokemon\";\r\n\r\nimport Loading from \"../../Loading/Loading\";\r\n\r\nconst Pokedex = ({ pokemones, isSearching }) => {\r\n  return (\r\n    <div className=\"bg-primary w-100\">\r\n      <Pagination />\r\n\r\n      {isSearching ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          <section className=\"container rounded\">\r\n            <div className=\"row\">\r\n              {pokemones?.map((pokemon) => {\r\n                return (\r\n                  <div\r\n                    className=\"col-md-4 col-sm-6 col-12 d-flex shadow bg-white rounded\"\r\n                    key={pokemon.name}\r\n                  >\r\n                    <Pokemon pokemon={pokemon} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </section>\r\n          <Pagination />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\r\nimport { usePokemon } from \"../../Context/PokemonContext\";\r\n\r\nconst PokemonsFavorits = () => {\r\n  const {\r\n    favoritsPokemons,\r\n    setIsViewFavorits,\r\n    typePokemonColor,\r\n    favorits,\r\n    heart,\r\n  } = usePokemon();\r\n\r\n  return (\r\n    <div\r\n      className=\"container p-3 rounded bg-secondary position-absolute d-flex flex-column mt-5 overflow-auto shadow\"\r\n      style={{ height: \"80vh\" }}\r\n    >\r\n      <section className=\"mb-4 d-flex justify-content-center\">\r\n        <span\r\n          onClick={() => {\r\n            setIsViewFavorits(false);\r\n          }}\r\n          className=\"bg-danger text-white shadow border border-1 rounded-circle p-2 px-3 cursor-pointer\"\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          X\r\n        </span>\r\n      </section>\r\n      <div className=\"container h-100 \">\r\n        <div className=\"row d-flex\">\r\n          {favoritsPokemons.length !== 0 ? (\r\n            favoritsPokemons.map((pokemon) => {\r\n              return (\r\n                <div\r\n                  className=\"col-md-4 col-sm-6 col-xm-12 d-flex shadow\"\r\n                  key={pokemon.name}\r\n                >\r\n                  <div className=\"img-container\">\r\n                    <img\r\n                      src={pokemon.sprites.front_default}\r\n                      alt={pokemon.name}\r\n                      className=\"img-fluid\"\r\n                    />\r\n                  </div>\r\n                  <section className=\"w-100\">\r\n                    <div className=\"text-start mt-2\">\r\n                      <h5>{pokemon.name}</h5>\r\n                    </div>\r\n                    <div className=\"d-flex w-100 justify-content-around\">\r\n                      <div className=\"mx-1 d-flex w-50\">\r\n                        <p\r\n                          className={`${\r\n                            typePokemonColor(pokemon)[0]\r\n                          } px-1 py-1 w-100 rounded-pill text-center`}\r\n                        >\r\n                          {pokemon.types[0].type.name}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"mx-1 d-flex w-50\">\r\n                        <p\r\n                          className={\r\n                            pokemon.types[1]?.type.name\r\n                              ? `${\r\n                                  typePokemonColor(pokemon)[1]\r\n                                } px-1 py-1 w-100 rounded-pill text-center`\r\n                              : \"my-auto bg-secondary rounded-pill text-center\"\r\n                          }\r\n                        >\r\n                          {pokemon.types[1]?.type.name}\r\n                        </p>\r\n                      </div>\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-outline\"\r\n                          onClick={() => favorits(pokemon.name)}\r\n                        >\r\n                          <div>{heart(pokemon.name)}</div>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </section>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div className=\"col-12 mt-5 text-warning h4 text-center\">\r\n              No has seleccionado ningun pokemón favorito.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonsFavorits;\r\n","import './App.css';\nimport React, { useEffect } from 'react';\nimport Navbar from './components/Header/Navbar';\nimport SearchBar from './components/Main/SearchBar';\nimport Pokedex from './components/Main/Pokedex/Pokedex';\nimport { PokemonProvider, usePokemon } from './components/Context/PokemonContext';\nimport PokemonsFavorits from './components/Main/Pokedex/PokemonsFavorits';\n\nconst Pokemons = () => <PokemonProvider><App></App></PokemonProvider>\nexport default Pokemons;\n\nfunction App() {\n\n\n  const { page,\n    pokemones,\n    setPokemones,\n    ObtenerPokemones,\n    notFound,\n    setNotFound,\n    isSearching,\n    setIsSearching,\n    isViewFavorits } = usePokemon();\n\n\n  useEffect(() => {\n    ObtenerPokemones();\n  }, [page]);\n\n  const searchPokemon = async (pokemon) => {\n    setIsSearching(true);\n\n    if (pokemon) {\n      const url = \"https://pokeapi.co/api/v2/pokemon/\";\n      const response = await fetch(url + pokemon);\n      if (response.ok) {\n        const data = await response.json();\n        setPokemones([data]);\n        setIsSearching(false)\n      } else {\n        setNotFound(true);\n        setIsSearching(false);\n      }\n    } else {\n      ObtenerPokemones();\n    }\n  }\n\n  return (\n    isViewFavorits ?\n      <div className=\"d-flex justify-content-center items-content-center lead\">\n        <PokemonsFavorits />\n      </div>\n      :\n\n      <div className=\"lead\">\n        <Navbar />\n        <SearchBar searchPokemon={searchPokemon} />\n        {\n          notFound ?\n            <div className=\"text-warning p-5 h4 text-center\">¡No se encontraron resultados!</div>\n            :\n            <Pokedex pokemones={pokemones} isSearching={isSearching} />\n        }\n\n      </div>\n\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}